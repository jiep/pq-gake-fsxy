# https://cristianadam.eu/20191222/using-github-actions-with-c-plus-plus-and-cmake

name: CMake Build Matrix

on: [push]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              name: "Ubuntu Latest GCC",
              artifact: "Linux",
              os: ubuntu-20.04,
              build_type: "Release", cc: "gcc"
            }
          # - {
          #     name: "macOS Latest Clang",
          #     artifact: "macOS.tar.xz",
          #     os: macos-latest,
          #     build_type: "Release", cc: "clang", cxx: "clang++"
          #   }
    steps:
    - uses: actions/checkout@v1

    - name: Download and build dependencies
      run: bash .github/liboqs.sh

    - name: Configure
      shell: bash
      run: |
        CC=${{ matrix.config.cc }}

        cmake \
            -S . \
            -B build \
            -D CMAKE_BUILD_TYPE=${{ matrix.config.build_type }}

    - name: Build
      shell: bash
      run: cmake --build build

    - name: Run tests
      shell: bash
      run: cd build && ctest

    - name: Pack
      working-directory: build
      run: zip -r ../${{ matrix.config.artifact }} bin lib

    - name: Upload
      uses: actions/upload-artifact@v1
      with:
        path: ./${{ matrix.config.artifact }}
        name: ${{ matrix.config.artifact }}

  release:
    if: contains(github.ref, 'tags/v')
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Store Release url
      run: |
        echo "${{ steps.create_release.outputs.upload_url }}" > ./upload_url

    - uses: actions/upload-artifact@v1
      with:
        path: ./upload_url
        name: upload_url

  publish:
    if: contains(github.ref, 'tags/v')
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Ubuntu Latest GCC", artifact: "Linux",
            os: ubuntu-20.04
          }
        # - {
        #     name: "macOS Latest Clang", artifact: "macOS.tar.xz",
        #     os: ubuntu-latest
        #   }
    needs: release

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v1
      with:
        name: ${{ matrix.config.artifact }}
        path: ./

    - name: Download URL
      uses: actions/download-artifact@v1
      with:
        name: upload_url
        path: ./
    - id: set_upload_url
      run: |
        upload_url=`cat ./upload_url`
        echo ::set-output name=upload_url::$upload_url

    - name: Upload to Release
      id: upload_to_release
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.set_upload_url.outputs.upload_url }}
        asset_path: ./${{ matrix.config.artifact }}
        asset_name: ${{ matrix.config.artifact }}
        asset_content_type: application/x-gtar
